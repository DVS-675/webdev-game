{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://webdev-game/./js/deck.js","webpack://webdev-game/./js/utils.js","webpack://webdev-game/./js/startGameClosed.js","webpack://webdev-game/./js/startGame.js","webpack://webdev-game/./js/gameMenu.js","webpack://webdev-game/./js/script.js"],"sourcesContent":["const SUITS = ['♠', '♣', '♥', '♦']\nconst VALUES = ['A', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\n\nexport default class Deck {\n   constructor(cards = freshDeck()) {\n      this.cards = cards\n   }\n\n   get numberOfCards() {\n      return this.cards.length\n   }\n\n   shuffle() {\n      for (let i = this.numberOfCards - 1; i > 0; i--) {\n         const newIndex = Math.floor(Math.random() * (i + 1))\n         const oldValue = this.cards[newIndex]\n         this.cards[newIndex] = this.cards[i]\n         this.cards[i] = oldValue\n      }\n   }\n}\n\nclass Card {\n   constructor(suit, value) {\n      this.suit = suit\n      this.value = value\n   }\n\n   get color() {\n      return this.suit === '♣' || this.suit === '♠' ? 'black' : 'red'\n   }\n}\n\nfunction freshDeck() {\n   return SUITS.flatMap((suit) => {\n      return VALUES.map((value) => {\n         return new Card(suit, value)\n      })\n   })\n}\n","import Deck from './deck.js'\n\nexport const duplicateArrayAndMix = (array) => {\n   const duplicateCards = array.flatMap((i) => [i, i])\n   for (let i = 0; i < duplicateCards.length - 1; i++) {\n      let j = i + Math.floor(Math.random() * (duplicateCards.length - i))\n      let temp = duplicateCards[j]\n      duplicateCards[j] = duplicateCards[i]\n      duplicateCards[i] = temp\n   }\n   return duplicateCards\n}\n\nexport const createIconsArray = (gameLevel) => {\n   let deck = new Deck()\n   deck.shuffle()\n\n   switch (gameLevel) {\n      case 1:\n         return duplicateArrayAndMix(deck.cards.slice(0, 3))\n      case 2:\n         return duplicateArrayAndMix(deck.cards.slice(0, 6))\n      case 3:\n         return duplicateArrayAndMix(deck.cards.slice(0, 9))\n      default:\n         break\n   }\n}\n","import { createGameMenu } from './gameMenu.js'\nlet clickable = true\nlet firstCard = null\nlet secondCard = null\nexport const startGameClosedCards = ({ appEl, cardsIcons }) => {\n   const suitsBackground = {\n      '♠': 'card_suit_spades.svg',\n      '♣': 'card_suit_clubs.svg',\n      '♥': 'card_suit_hearts.svg',\n      '♦': 'card_suit_diamonds.svg',\n   }\n   const cardsHtml =\n      cardsIcons &&\n      cardsIcons\n         .map((card) => {\n            return `\n    <div data-value=${card.value} data-suit=${card.suit} class=\"main__game_cards_item flip\" >\n        \n    </div>\n    `\n         })\n         .join('')\n\n   appEl.innerHTML = `\n    <div class='main__game'>\n        <div class=\"main__game_content\">\n            <div id=\"timer\">\n                <div class=\"timer__text\">\n                    <span class='timer__text_item'>min</span> <span class='timer__text_item'>sek</span>\n                </div>\n                <p class='timer'>00.00</p>\n            </div>\n            <button class=\"main__game_content_button\">Начать заново</button>\n        </div>\n            <div class=\"main__game_cards\">\n                ${cardsHtml}\n            </div>\n    </div>`\n\n   const buttonStartGame = document.querySelector('.main__game_content_button')\n   buttonStartGame.addEventListener('click', () => {\n      clickable = true\n      firstCard = null\n      secondCard = null\n      createGameMenu()\n   })\n\n   const flipCard = () => {\n      const cardItems = document.querySelectorAll('.main__game_cards_item')\n\n      for (const cardItem of cardItems) {\n         cardItem.addEventListener('click', () => {\n            if (clickable == true) {\n               const cardSuit = cardItem.dataset.suit\n               const cardValue = cardItem.dataset.value\n               cardItem.classList.remove('flip')\n               cardItem.innerHTML = `            \n            <div class=\"main__game_cards_item_left\">\n                <div class=\"card__value\">${cardValue}</div>\n                <img class=\"card__suit\" src=\"img/${suitsBackground[cardSuit]}\" alt=\"suit\">\n            </div>\n            <div class=\"main__game_cards_item_center\">\n                <img class=\"card__suit_center\" src=\"img/${suitsBackground[cardSuit]}\" alt=\"suit\">          \n            </div>\n            <div class=\"main__game_cards_item_right\">\n                <div class=\"card__value\">${cardValue}</div>\n                <img class=\"card__suit\" src=\"img/${suitsBackground[cardSuit]}\" alt=\"suit\">\n            </div>\n                `\n\n               if (firstCard == null) {\n                  firstCard = cardItem\n               } else {\n                  if (cardItem != firstCard) {\n                     secondCard = cardItem\n                     clickable = false\n                  }\n               }\n\n               if (firstCard != null && secondCard != null) {\n                  if (\n                     firstCard.dataset.value == secondCard.dataset.value &&\n                     firstCard.dataset.suit == secondCard.dataset.suit\n                  ) {\n                     setTimeout(() => {\n                        firstCard = null\n                        secondCard = null\n                        clickable = true\n                        console.log('Выиграл')\n                     }, 500)\n                  } else {\n                     setTimeout(() => {\n                        alert('Вы проиграли!')\n                        createGameMenu()\n                        firstCard.classList.add('flip')\n                        secondCard.classList.add('flip')\n                        firstCard.innerHTML = ''\n                        secondCard.innerHTML = ''\n                        firstCard = null\n                        secondCard = null\n                        clickable = true\n                     }, 500)\n                  }\n               }\n               if (\n                  Array.from(cardItems).every(\n                     (cardItem) =>\n                        cardItem.className === 'main__game_cards_item'\n                  )\n               ) {\n                  alert('Вы угадали все карты!')\n               }\n            }\n         })\n      }\n   }\n   flipCard()\n}\n","import { createIconsArray } from './utils.js'\nimport { createGameMenu } from './gameMenu.js'\nimport { startGameClosedCards } from './startGameClosed.js'\nexport const startGame = (gameLevel) => {\n   const suitsBackground = {\n      '♠': 'card_suit_spades.svg',\n      '♣': 'card_suit_clubs.svg',\n      '♥': 'card_suit_hearts.svg',\n      '♦': 'card_suit_diamonds.svg',\n   }\n\n   console.log(gameLevel)\n\n   const appEl = document.querySelector('.game__container')\n   const cardsIcons = createIconsArray(gameLevel)\n   console.log(cardsIcons)\n\n   const cardsHtml = cardsIcons\n      .map((card) => {\n         return `\n    <div data-value=${card.value} data-suit=${\n            card.suit\n         } class=\"main__game_cards_item\" >\n        <div class=\"main__game_cards_item_left\">\n            <div class=\"card__value\">${card.value}</div>\n            <img class=\"card__suit\" src=\"img/${\n               suitsBackground[card.suit]\n            }\" alt=\"suit\">\n        </div>\n        <div class=\"main__game_cards_item_center\">\n        <img class=\"card__suit_center\" src=\"img/${\n           suitsBackground[card.suit]\n        }\" alt=\"suit\">          \n        </div>\n        <div class=\"main__game_cards_item_right\">\n            <div class=\"card__value\">${card.value}</div>\n            <img class=\"card__suit\" src=\"img/${\n               suitsBackground[card.suit]\n            }\" alt=\"suit\">\n        </div>\n    </div>\n    `\n      })\n      .join('')\n\n   appEl.innerHTML = `\n    <div class='main__game'>\n        <div class=\"main__game_content\">\n            <div id=\"timer\">\n                <div class=\"timer__text\">\n                    <span class='timer__text_item'>min</span> <span class='timer__text_item'>sek</span>\n                </div>\n                <p class='timer'>00.00</p>\n            </div>\n            <button class=\"main__game_content_button\">Начать заново</button>\n        </div>\n            <div class=\"main__game_cards\">\n                ${cardsHtml}\n            </div>\n    </div>`\n\n   const buttonStartGame = document.querySelector('.main__game_content_button')\n   buttonStartGame.addEventListener('click', () => {\n      createGameMenu()\n   })\n   setTimeout(() => startGameClosedCards({ appEl, cardsIcons }), 5000)\n}\n\n","import { startGame } from './startGame.js'\nexport const createGameMenu = () => {\n   const appEl = document.querySelector('.game__container')\n\n   appEl.innerHTML = ''\n\n   appEl.innerHTML = `\n <div class='start__main'>\n    <h2 class=\"start__main_text\">Выбери сложность</h2>\n        <div class ='start__main_level'>\n            <label>\n                <input class = 'start__main_level-button' type=\"radio\" name=\"level\" value=\"1\">\n                <span class='start__main_level_item'>1</span>\n            </label>\n            <label>\n                <input class = 'start__main_level-button' type=\"radio\" name=\"level\" value=\"2\">\n                <span class='start__main_level_item'>2</span>\n            </label>\n            <label>\n                <input class = 'start__main_level-button' type=\"radio\" name=\"level\" value=\"3\">\n                <span class='start__main_level_item'>3</span>\n            </label>\n        </div>\n    <button class=\"start__main_button\">Старт</button>\n </div>\n  `\n\n   const chooseDifficultButtons = document.querySelectorAll(\n      '.start__main_level-button'\n   )\n   const buttonStart = document.querySelector('.start__main_button')\n   console.log(chooseDifficultButtons)\n\n   for (let chooseDifficultButton of chooseDifficultButtons) {\n      chooseDifficultButton.addEventListener('click', () => {\n         const gameLevel = Number(chooseDifficultButton.value)\n         buttonStart.addEventListener('click', () => startGame(gameLevel))\n      })\n   }\n}\n","import { createGameMenu } from './gameMenu.js'\nimport '../css/style.scss'\nconst cardsApp = () => {\n   createGameMenu()\n}\n\ncardsApp()\n"],"names":["SUITS","VALUES","Deck","constructor","cards","flatMap","suit","map","value","Card","freshDeck","this","numberOfCards","length","shuffle","i","newIndex","Math","floor","random","oldValue","color","duplicateArrayAndMix","array","duplicateCards","j","temp","clickable","firstCard","secondCard","startGame","gameLevel","suitsBackground","console","log","appEl","document","querySelector","cardsIcons","deck","slice","createIconsArray","cardsHtml","card","join","innerHTML","addEventListener","createGameMenu","setTimeout","cardItems","querySelectorAll","cardItem","cardSuit","dataset","cardValue","classList","remove","alert","add","Array","from","every","className","flipCard","startGameClosedCards","chooseDifficultButtons","buttonStart","chooseDifficultButton","Number"],"sourceRoot":""}