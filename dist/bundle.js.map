{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://webdev-game/./css/style.scss?2f82","webpack://webdev-game/./js/deck.ts","webpack://webdev-game/./js/gameMenu.ts","webpack://webdev-game/./js/renderHtml.ts","webpack://webdev-game/./js/startGame.ts","webpack://webdev-game/./js/startGameClosed.ts","webpack://webdev-game/./js/utils.ts","webpack://webdev-game/webpack/bootstrap","webpack://webdev-game/webpack/runtime/define property getters","webpack://webdev-game/webpack/runtime/hasOwnProperty shorthand","webpack://webdev-game/webpack/runtime/make namespace object","webpack://webdev-game/./js/script.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","const SUITS = ['♠', '♣', '♥', '♦'];\nconst VALUES = ['A', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n\nexport class Deck {\n   cards: Card[];\n\n   constructor(cards = freshDeck()) {\n      this.cards = cards;\n   }\n\n   get numberOfCards() {\n      return this.cards.length;\n   }\n\n   shuffle() {\n      for (let i = this.numberOfCards - 1; i > 0; i--) {\n         const newIndex = Math.floor(Math.random() * (i + 1));\n         const oldValue = this.cards[newIndex];\n         this.cards[newIndex] = this.cards[i];\n         this.cards[i] = oldValue;\n      }\n   }\n}\n\nclass Card {\n   suit: string;\n   value: string;\n   constructor(suit: string, value: string) {\n      this.suit = suit;\n      this.value = value;\n   }\n}\n\nfunction freshDeck() {\n   return SUITS.flatMap((suit) => {\n      return VALUES.map((value) => {\n         return new Card(suit, value);\n      });\n   });\n}\n","import { startGame } from './startGame';\nexport const createGameMenu = () => {\n   const mainAppEl = document.getElementById('main-page') as HTMLElement;\n   mainAppEl.innerHTML = `<section id=\"main\" class=\"game__container\"></section>`;\n   const appEl = document.querySelector('.game__container') as HTMLElement;\n\n   appEl.innerHTML = '';\n\n   appEl.innerHTML = `\n <div class='start__main'>\n    <h2 class=\"start__main_text\">Выбери сложность</h2>\n        <div class ='start__main_level'>\n            <label>\n                <input class = 'start__main_level-button' type=\"radio\" name=\"level\" value=\"1\">\n                <span class='start__main_level_item'>1</span>\n            </label>\n            <label>\n                <input class = 'start__main_level-button' type=\"radio\" name=\"level\" value=\"2\">\n                <span class='start__main_level_item'>2</span>\n            </label>\n            <label>\n                <input class = 'start__main_level-button' type=\"radio\" name=\"level\" value=\"3\">\n                <span class='start__main_level_item'>3</span>\n            </label>\n        </div>\n    <button class=\"start__main_button\">Старт</button>\n </div>\n  `;\n\n   const chooseDifficultButtons = document.querySelectorAll(\n      '.start__main_level-button'\n   );\n   const buttonStart = document.querySelector(\n      '.start__main_button'\n   ) as HTMLElement;\n   console.log(chooseDifficultButtons);\n\n   chooseDifficultButtons.forEach((chooseDifficultButton) => {\n      chooseDifficultButton.addEventListener('click', () => {\n         const gameLevel = Number(\n            (chooseDifficultButton as HTMLButtonElement).value\n         );\n         buttonStart.addEventListener('click', () => startGame(gameLevel));\n      });\n   });\n};\n","type suitsBackgroundType = {\n   [word: string]: string;\n};\n\n//рендер карты при нажатии\n\nexport const cardItemRender = ({\n   cardValue,\n   suitsBackground,\n   cardSuit,\n}: {\n   cardValue: string | undefined;\n   suitsBackground: suitsBackgroundType;\n   cardSuit: string | undefined;\n}) => {\n   return `            \n            <div class=\"main__game_cards_item_left\">\n                <div class=\"card__value\">${cardValue}</div>\n                <img class=\"card__suit\" src=\"img/${\n                   suitsBackground[cardSuit as string]\n                }\" alt=\"suit\">\n            </div>\n            <div class=\"main__game_cards_item_center\">\n                <img class=\"card__suit_center\" src=\"img/${\n                   suitsBackground[cardSuit as string]\n                }\" alt=\"suit\">          \n            </div>\n            <div class=\"main__game_cards_item_right\">\n                <div class=\"card__value\">${cardValue}</div>\n                <img class=\"card__suit\" src=\"img/${\n                   suitsBackground[cardSuit as string]\n                }\" alt=\"suit\">\n            </div>\n                `;\n};\n\n//рендер результата игры при выигрыше\n\nexport const gameResultWin = ({\n   timeForGame,\n   cardsHtml,\n}: {\n   timeForGame: string;\n   cardsHtml: string;\n}) => {\n   return `<div class=\"main__game_result\">\n      <img class = 'main__game_result_img'src=\"./img/win.svg\" alt=\"dead\">\n      <h2 class=\"main__game_result_text\">Вы выиграли</h2>\n      <p class=\"main__game_result_text_time\">Затраченное время</p>\n      <p class='main__game_result_text_timer'>${timeForGame}</p>\n      <button class=\"main__game_result_button\">Играть снова</button>\n    </div>\n    <section id=\"main\" class=\"game__container\">\n      <div class='main__game'>\n         \n         <div class=\"main__game_content\">\n               <div id=\"timer\">\n                  <div class=\"timer__text\">\n                     <span class='timer__text_item'>min</span> <span class='timer__text_item'>sek</span>\n                  </div>\n                  <p class='timer'>${timeForGame}</p>\n               </div>\n               <button class=\"main__game_content_button\">Начать заново</button>\n         </div>\n               <div class=\"main__game_cards\">\n             ${cardsHtml}\n               </div>\n      </div>\n    </section>  \n    `;\n};\n\n//рендер результата игры при проигрыше\n\nexport const gameResultLose = ({\n   timeForGame,\n   cardsHtml,\n}: {\n   timeForGame: string;\n   cardsHtml: string;\n}) => {\n   return `\n    <div class=\"main__game_result\">\n      <img class = 'main__game_result_img'src=\"./img/dead.svg\" alt=\"dead\">\n      <h2 class=\"main__game_result_text\">Вы проиграли</h2>\n      <p class=\"main__game_result_text_time\">Затраченное время</p>\n      <p class='main__game_result_text_timer'>${timeForGame}</p>\n      <button class=\"main__game_result_button\">Играть снова</button>\n    </div>\n    <section id=\"main\" class=\"game__container\">\n      <div class='main__game'>\n         \n         <div class=\"main__game_content\">\n               <div id=\"timer\">\n                  <div class=\"timer__text\">\n                     <span class='timer__text_item'>min</span> <span class='timer__text_item'>sek</span>\n                  </div>\n                  <p class='timer'>${timeForGame}</p>\n               </div>\n               <button class=\"main__game_content_button\">Начать заново</button>\n         </div>\n               <div class=\"main__game_cards\">\n                  ${cardsHtml}\n               </div>\n      </div>\n    </section>                      \n`;\n};\n","import { createIconsArray } from './utils';\nimport { createGameMenu } from './gameMenu';\nimport { startGameClosedCards } from './startGameClosed';\n\nexport interface ICardType {\n   suit: string;\n   value: string;\n}\nexport const startGame = (gameLevel: number) => {\n   const mainAppEl = document.getElementById('main-page') as HTMLElement;\n   mainAppEl.innerHTML = `<section id=\"main\" class=\"game__container\"></section>`;\n   type suitsBackgroundType = {\n      [word: string]: string;\n   };\n   const suitsBackground: suitsBackgroundType = {\n      '♠': 'spades.svg',\n      '♣': 'clubs.svg',\n      '♥': 'hearts.svg',\n      '♦': 'diamonds.svg',\n   };\n\n   console.log(gameLevel);\n   console.log(suitsBackground);\n   const appEl = document.querySelector('.game__container') as HTMLElement;\n   const cardsIcons = createIconsArray(gameLevel) as ICardType[];\n   console.log(cardsIcons);\n\n   const cardsHtml = cardsIcons\n      .map((card: ICardType) => {\n         console.log(card);\n         return `\n    <div data-value=${card.value} data-suit=${\n            card.suit\n         } class=\"main__game_cards_item\" >\n        <div class=\"main__game_cards_item_left\">\n            <div class=\"card__value\">${card.value}</div>\n            <img class=\"card__suit\" src=\"img/${\n               suitsBackground[card.suit]\n            }\" alt=\"suit\">\n        </div>\n        <div class=\"main__game_cards_item_center\">\n        <img class=\"card__suit_center\" src=\"img/${\n           suitsBackground[card.suit]\n        }\" alt=\"suit\">          \n        </div>\n        <div class=\"main__game_cards_item_right\">\n            <div class=\"card__value\">${card.value}</div>\n            <img class=\"card__suit\" src=\"img/${\n               suitsBackground[card.suit]\n            }\" alt=\"suit\">\n        </div>\n    </div>\n    `;\n      })\n      .join('');\n\n   appEl.innerHTML = `\n    <div class='main__game'>\n        <div class=\"main__game_content\">\n            <div id=\"timer\">\n                <div class=\"timer__text\">\n                    <span class='timer__text_item'>min</span> <span class='timer__text_item'>sek</span>\n                </div>\n                <p class='timer'>00.00</p>\n            </div>\n            <button class=\"main__game_content_button\">Начать заново</button>\n        </div>\n            <div class=\"main__game_cards\">\n                ${cardsHtml}\n            </div>\n    </div>`;\n\n   const buttonStartGame = document.querySelector(\n      '.main__game_content_button'\n   ) as HTMLElement;\n   buttonStartGame.addEventListener('click', () => {\n      createGameMenu();\n   });\n   setTimeout(() => startGameClosedCards({ appEl, cardsIcons }), 5000);\n};\n","import { createGameMenu } from './gameMenu';\nimport { ICardType } from './startGame';\nimport { gameResultWin, gameResultLose, cardItemRender } from './renderHtml';\nlet clickable = true;\nlet firstCard: HTMLElement | null = null;\nlet secondCard: HTMLElement | null = null;\nexport const startGameClosedCards = ({\n   appEl,\n   cardsIcons,\n}: {\n   appEl: HTMLElement;\n   cardsIcons: ICardType[];\n}) => {\n   type suitsBackgroundType = {\n      [word: string]: string;\n   };\n   const suitsBackground: suitsBackgroundType = {\n      '♠': 'spades.svg',\n      '♣': 'clubs.svg',\n      '♥': 'hearts.svg',\n      '♦': 'diamonds.svg',\n   };\n   const cardsHtml =\n      cardsIcons &&\n      cardsIcons\n         .map((card: ICardType) => {\n            return `\n    <div data-value=${card.value} data-suit=${card.suit} class='main__game_cards_item flip' >\n        \n    </div>\n    `;\n         })\n         .join('');\n\n   appEl.innerHTML = `\n    <div class='main__game'>\n        <div class=\"main__game_content\">\n            <div id=\"timer\">\n                <div class=\"timer__text\">\n                    <span class='timer__text_item'>min</span> <span class='timer__text_item'>sek</span>\n                </div>\n                <p class='timer'>00.00</p>\n            </div>\n            <button class=\"main__game_content_button\">Начать заново</button>\n        </div>\n            <div class=\"main__game_cards\">\n                ${cardsHtml}\n            </div>\n    </div>`;\n\n   //Таймер\n   const countEl = document.querySelector('.timer') as HTMLElement;\n   function timeGame() {\n      let timer = 0;\n\n      countEl.textContent = '00.00';\n      function setTime() {\n         timer++;\n         const minutes = ('00' + Math.floor(timer / 60)).slice(-2);\n         const seconds = ('00' + (timer % 60)).slice(-2);\n         countEl.textContent = `${minutes}.${seconds}`;\n      }\n      window.timeGame = setInterval(setTime, 1000);\n      console.log(window.timeGame);\n      setTimeout(clearInterval, 600000, window.timeGame);\n   }\n   timeGame();\n\n   // Начало игры\n\n   const buttonStartGame = document.querySelector(\n      '.main__game_content_button'\n   ) as HTMLElement;\n   buttonStartGame.addEventListener('click', () => {\n      clickable = true;\n      firstCard = null;\n      secondCard = null;\n      createGameMenu();\n   });\n\n   const flipCard = () => {\n      const cardItems = document.querySelectorAll('.main__game_cards_item');\n      (cardItems as NodeListOf<HTMLElement>).forEach(\n         (cardItem: HTMLElement) => {\n            cardItem.addEventListener('click', () => {\n               if (clickable) {\n                  const cardSuit = cardItem.dataset.suit;\n                  const cardValue = cardItem.dataset.value;\n                  cardItem.classList.remove('flip');\n                  cardItem.innerHTML = cardItemRender({\n                     cardValue,\n                     suitsBackground,\n                     cardSuit,\n                  });\n\n                  if (firstCard === null) {\n                     firstCard = cardItem;\n                  } else {\n                     if (cardItem !== firstCard) {\n                        secondCard = cardItem;\n                        clickable = false;\n                     }\n                  }\n\n                  if (firstCard !== null && secondCard !== null) {\n                     if (\n                        firstCard.dataset.value === secondCard.dataset.value &&\n                        firstCard.dataset.suit === secondCard.dataset.suit\n                     ) {\n                        setTimeout(() => {\n                           firstCard = null;\n                           secondCard = null;\n                           clickable = true;\n                        }, 500);\n                     } else {\n                        setTimeout(() => {\n                           console.log(cardItems);\n                           cardItems.forEach((cardItem) =>\n                              cardItem.classList.remove('flip')\n                           );\n\n                           const timeForGame = countEl.innerHTML;\n                           console.log(timeForGame);\n                           const mainAppEl = document.getElementById(\n                              'main-page'\n                           ) as HTMLElement;\n                           const cardsHtml = cardsIcons\n                              .map((card: ICardType) => {\n                                 return `\n                     <div data-value=${card.value} data-suit=${\n                                    card.suit\n                                 } class=\"main__game_cards_item\" >\n                         <div class=\"main__game_cards_item_left\">\n                              <div class=\"card__value\">${card.value}</div>\n                              <img class=\"card__suit\" src=\"img/${\n                                 suitsBackground[card.suit]\n                              }\" alt=\"suit\">\n                        </div>\n                        <div class=\"main__game_cards_item_center\">\n                        <img class=\"card__suit_center\" src=\"img/${\n                           suitsBackground[card.suit]\n                        }\" alt=\"suit\">          \n                        </div>\n                        <div class=\"main__game_cards_item_right\">\n                              <div class=\"card__value\">${card.value}</div>\n                              <img class=\"card__suit\" src=\"img/${\n                                 suitsBackground[card.suit]\n                              }\" alt=\"suit\">\n                        </div>\n                     </div>\n                     `;\n                              })\n                              .join('');\n                           mainAppEl.innerHTML = gameResultLose({\n                              timeForGame,\n                              cardsHtml,\n                           });\n\n                           const appEl = document.querySelector(\n                              '.game__container'\n                           ) as HTMLElement;\n                           appEl.classList.add('end_game_background');\n\n                           const buttonStartResult = document.querySelector(\n                              '.main__game_result_button'\n                           ) as HTMLElement;\n\n                           buttonStartResult.addEventListener('click', () => {\n                              const appEl = document.querySelector(\n                                 '.game__container'\n                              ) as HTMLElement;\n                              clickable = true;\n                              firstCard = null;\n                              secondCard = null;\n                              appEl.classList.remove('end_game_background');\n                              createGameMenu();\n                           });\n                           clickable = true;\n                        }, 500);\n                     }\n                  }\n                  if (\n                     Array.from(cardItems).every(\n                        (cardItem) =>\n                           cardItem.className === 'main__game_cards_item'\n                     )\n                  ) {\n                     const timeForGame = countEl.innerHTML;\n                     const mainAppEl = document.getElementById(\n                        'main-page'\n                     ) as HTMLElement;\n                     const cardsHtml = cardsIcons\n                        .map((card: ICardType) => {\n                           return `\n                     <div data-value=${card.value} data-suit=${\n                              card.suit\n                           } class=\"main__game_cards_item\" >\n                         <div class=\"main__game_cards_item_left\">\n                              <div class=\"card__value\">${card.value}</div>\n                              <img class=\"card__suit\" src=\"img/${\n                                 suitsBackground[card.suit]\n                              }\" alt=\"suit\">\n                        </div>\n                        <div class=\"main__game_cards_item_center\">\n                        <img class=\"card__suit_center\" src=\"img/${\n                           suitsBackground[card.suit]\n                        }\" alt=\"suit\">          \n                        </div>\n                        <div class=\"main__game_cards_item_right\">\n                              <div class=\"card__value\">${card.value}</div>\n                              <img class=\"card__suit\" src=\"img/${\n                                 suitsBackground[card.suit]\n                              }\" alt=\"suit\">\n                        </div>\n                     </div>\n                     `;\n                        })\n                        .join('');\n                     mainAppEl.innerHTML = gameResultWin({\n                        timeForGame,\n                        cardsHtml,\n                     });\n\n                     const appEl = document.querySelector(\n                        '.game__container'\n                     ) as HTMLElement;\n                     appEl.classList.add('end_game_background');\n                     const buttonStartResult = document.querySelector(\n                        '.main__game_result_button'\n                     ) as HTMLElement;\n                     buttonStartResult.addEventListener('click', () => {\n                        clickable = true;\n                        firstCard = null;\n                        secondCard = null;\n                        appEl.classList.remove('end_game_background');\n                        createGameMenu();\n                     });\n                  }\n               }\n            });\n         }\n      );\n   };\n   flipCard();\n};\n","import { Deck } from './deck';\nimport { ICardType } from './startGame';\nexport const duplicateArrayAndMix = (array: ICardType[]) => {\n   const duplicateCards = array.flatMap((i: ICardType) => [i, i]);\n   for (let i = 0; i < duplicateCards.length - 1; i++) {\n      const j = i + Math.floor(Math.random() * (duplicateCards.length - i));\n      const temp = duplicateCards[j];\n      duplicateCards[j] = duplicateCards[i];\n      duplicateCards[i] = temp;\n   }\n   return duplicateCards;\n};\n\nexport const createIconsArray = (gameLevel: number) => {\n   const deck = new Deck();\n   deck.shuffle();\n\n   switch (gameLevel) {\n      case 1:\n         return duplicateArrayAndMix(deck.cards.slice(0, 3));\n      case 2:\n         return duplicateArrayAndMix(deck.cards.slice(0, 6));\n      case 3:\n         return duplicateArrayAndMix(deck.cards.slice(0, 9));\n      default:\n         break;\n   }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createGameMenu } from './gameMenu';\nimport '../css/style.scss';\ndeclare global {\n   interface Window {\n      timeGame: ReturnType<typeof setInterval>;\n      timeForGame: unknown;\n   }\n}\nconst cardsApp = () => {\n   createGameMenu();\n};\n\ncardsApp();\n"],"names":[],"sourceRoot":""}